{
    "type": "class",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "HSize": null,
        "VSize": null,
        "VHFF": null,
        "HNatPixRate": null,
        "VNatPixRate": null,
        "NumProjectors": null,
        "SizePerStack": null,
        "Lens": null,
        "Distance": null,
        "SpyOverlap": null,
        "SpyOpMonH": null,
        "SpyOpMonV": null,
        "designer|userClassName": "WSC",
        "designer|userAlias": "WSCalc",
        "requires": [
            "WideScreenCalc.controller.Screen"
        ],
        "singleton": true
    },
    "configAlternates": {
        "HSize": "number",
        "VSize": "number",
        "VHFF": "number",
        "HNatPixRate": "number",
        "VNatPixRate": "number",
        "NumProjectors": "number",
        "SizePerStack": "number",
        "Lens": "number",
        "Distance": "number",
        "SpyOverlap": "number",
        "SpyOpMonH": "number",
        "SpyOpMonV": "number"
    },
    "designerId": "94598dfb-e775-41de-8bf4-e8d5a722c0ae",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "HSize",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "VSize",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "VHFF",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "HNatPixRate",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "VNatPixRate",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "NumProjectors",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "SizePerStack",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Lens",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Distance",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "SpyOverlap",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "SpyOpMonH",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "SpyOpMonV",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getCenterHeightFF",
                "fn": "getCenterHeightFF",
                "implHandler": [
                    "return((this.vsize / 2) + this.vhff);"
                ]
            },
            "designerId": "01901442-6bc3-4781-82e1-69e22fc01db1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getPixPerInch",
                "fn": "getPixPerInch",
                "implHandler": [
                    "return (this.getSpyHNatPixRate() / (this.hsize * 12));"
                ]
            },
            "designerId": "30988437-339c-40e9-9de1-610178b81097"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getProjAspectRatio",
                "fn": "getProjAspectRatio",
                "implHandler": [
                    "return (this.HNatPixRate / this.VNatPixRate);"
                ]
            },
            "designerId": "201903cd-aecb-46fe-bc08-db3935b0674e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getAspectRatio",
                "fn": "getAspectRatio",
                "implHandler": [
                    "return this.hsize / this.vsize;"
                ]
            },
            "designerId": "dd0ee9c8-9aae-41e2-8d85-d19e968ae1b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getStackWidth",
                "fn": "getStackWidth",
                "implHandler": [
                    "return ((this.vsize * this.getProjAspectRatio()));"
                ]
            },
            "designerId": "c3af4fa5-917d-45fb-9856-773bc2e4f618"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "RoundNum",
                "fn": "RoundNum",
                "designer|params": [
                    "num, x"
                ],
                "implHandler": [
                    "return Ext.Number.toFixed(num, x);",
                    ""
                ]
            },
            "designerId": "5b82d90d-13da-4a11-a948-7660892f9a51"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyHNatPixRate",
                "fn": "getSpyHNatPixRate",
                "implHandler": [
                    "return (this.VNatPixRate * this.getAspectRatio());"
                ]
            },
            "designerId": "f69e079e-08db-44c8-8269-dd0981bf0e70"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyVNatPixRate",
                "fn": "getSpyVNatPixRate",
                "implHandler": [
                    "return this.VNatPixRate;"
                ]
            },
            "designerId": "2a2616c3-9904-4784-b2d3-fc7d8467c052"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyAspectRatio",
                "fn": "getSpyAspectRatio",
                "implHandler": [
                    "return this.getSpyHNatPixRate() / this.getSpyVNatPixRate();"
                ]
            },
            "designerId": "19ac3dbc-6bd1-4cef-ae92-c6ad7637d0f6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyScreenTotalPix",
                "fn": "getSpyScreenTotalPix",
                "implHandler": [
                    "return this.getSpyVNatPixRate() * this.getSpyHNatPixRate();"
                ]
            },
            "designerId": "460ef9b1-e809-4398-af41-d9e175be32b0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyOpMonTotalPix",
                "fn": "getSpyOpMonTotalPix",
                "implHandler": [
                    "return this.spyOpMonH * this.getSpyVNatPixRate();"
                ]
            },
            "designerId": "9608ba58-851e-4213-98b4-ee2395552447"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyTotalPix",
                "fn": "getSpyTotalPix",
                "implHandler": [
                    "return this.getSpyScreenTotalPix() + this.getSpyOpMonTotalPix();"
                ]
            },
            "designerId": "98cd9ed3-23ff-4c66-8da0-47850684b3b1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getScreenWidth",
                "fn": "getScreenWidth",
                "implHandler": [
                    "var ret = this.vsize * (this.HNatPixRate / this.VNatPixRate);",
                    "return ret;"
                ]
            },
            "designerId": "2fa05e0e-f06a-4458-82f5-73a7df10e35d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getOverLapPix",
                "fn": "getOverLapPix",
                "implHandler": [
                    "var ret = ((this.HNatPixRate * this.numprojectors) - this.getSpyHNatPixRate()) / (this.numprojectors - 1);",
                    "return ret;"
                ]
            },
            "designerId": "1ea49308-4982-4444-a950-bc3114da7843"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getOverlapSize",
                "fn": "getOverlapSize",
                "implHandler": [
                    "var nonRoundedOLSize = this.getNonRoundedOLSize();",
                    "var overLapPix = this.getOverLapPix();",
                    "",
                    "return (this.getNonRoundedOLSize() * (this.getOverLapPix() / this.HNatPixRate));",
                    ""
                ]
            },
            "designerId": "e4a5fc2a-8994-4b41-b921-1763d355b5fa"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getNumberOuts",
                "fn": "getNumberOuts",
                "implHandler": [
                    "var outs = 0;",
                    "var i = 0;",
                    "while (outs === 0){",
                    "    var spec = ((this.HNatPixRate*i) - this.getSpyHNatPixRate()) / i-1;",
                    "    if(spec >= 200 & spec <= 512)",
                    "    outs = i;",
                    "    // Safety: prevent loop for ever",
                    "    if(i > 100) continue;",
                    "    i++;",
                    "}",
                    "return outs;"
                ]
            },
            "designerId": "d5ac2656-e4e6-42f7-939f-ad165af97dab"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getNonRoundedOLSize",
                "fn": "getNonRoundedOLSize",
                "implHandler": [
                    "return this.vsize * this.getProjAspectRatio();",
                    ""
                ]
            },
            "designerId": "bd0942b5-3873-4bd3-b133-565b374ef249"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getSpyOverlap",
                "fn": "getSpyOverlap",
                "implHandler": [
                    "var spyHNat = this.getSpyHNatPixRate();",
                    "return (((this.HNatPixRate * this.numprojectors) - this.getSpyHNatPixRate())/2);"
                ]
            },
            "designerId": "9002218e-db2a-4871-9b7a-406beac07f2c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "getScreens",
                "fn": "getScreens",
                "implHandler": [
                    "",
                    "var screens = [];",
                    "var x = 0, p = 0, o = 0;",
                    "var screenWidth = Math.round(wsCalc.getScreenWidth());",
                    "var overlapSize = wsCalc.getOverlapSize();",
                    "// x = left calculations, c = center calculations",
                    "var c = (wsCalc.hsize / 2) - wsCalc.hsize;",
                    "for ( i = 0; i < this.numprojectors; i++) {",
                    "    var scrn = new WideScreenCalc.controller.Screen();",
                    "    // left calcs",
                    "    scrn.leftLeft = x.toFixed(2);",
                    "    scrn.leftCenter = ((screenWidth / 2) + x).toFixed(2);",
                    "    scrn.leftRight = (screenWidth + x).toFixed(2);",
                    "    x = scrn.leftRight - overlapSize; //subtract overlap",
                    "    // center calcs",
                    "    scrn.centerLeft = c.toFixed(2);",
                    "    scrn.centerCenter = ((screenWidth / 2) + c).toFixed(2);",
                    "    scrn.centerRight = screenWidth + c;",
                    "    c = scrn.centerRight;",
                    "",
                    "    // pixel output calcs",
                    "    scrn.startPixelOutput = p;",
                    "    scrn.endPixelOutput = p + wsCalc.HNatPixRate;",
                    "    p = scrn.endPixelOutput - overlapSize; //subtract overlap",
                    "",
                    "    // pixel overlap calcs",
                    "    scrn.startPixelOverlap = wsCalc.HNatPixRate - wsCalc.getOverLapPix() + o;",
                    "    scrn.endPixelOverlap = scrn.startPixelOverlap + wsCalc.getOverLapPix();",
                    "    o = scrn.startPixelOverlap; // todo: subtract pixel overlap",
                    "",
                    "    screens.push(scrn);",
                    "}",
                    "return screens;"
                ]
            },
            "designerId": "c11db198-f0b8-4c35-b2e9-a28e5a7f9397"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "convertFeet",
                "fn": "convertFeet",
                "designer|params": [
                    "decimalFeet"
                ],
                "implHandler": [
                    "    var feet = Math.floor(decimalFeet);",
                    "    var inches = Math.round((decimalFeet - feet) * 12);",
                    "    var text = feet + \"'-\" + inches + '\"';",
                    "    return text;"
                ]
            },
            "designerId": "d88ae2f5-02e8-4221-90ce-4fde6278e246"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "drawScreens",
                "fn": "drawScreens",
                "designer|params": [
                    "xMainOffset",
                    "yMainOffset",
                    "fxr",
                    "measureFrom"
                ],
                "implHandler": [
                    "function mouseMove(el, t, eOpts) {",
                    "    el.setAttributes({stroke: 'blue', \"stroke-width\": 3}, true);",
                    "}",
                    "",
                    "function mouseOut(el, t, eOpts) {",
                    "    el.setAttributes({stroke: 'red', \"stroke-width\": 2}, true);",
                    "}",
                    "// move elelments to right to acomodate for the vertical center dimension text",
                    "xMainOffset = xMainOffset + 10;",
                    "// Screens",
                    "var screens = wsCalc.getScreens();",
                    "// Spyder Overlap",
                    "//alert(screens[0].leftLeft + '; ' + screens[0].leftCenter + '; ' + screens[0].leftRight + '; ' + screens[0].centerCenter);",
                    "var items = [];",
                    "var textItems = [];",
                    "var screenWidth = wsCalc.getScreenWidth();",
                    "var screenHeight = wsCalc.vsize;",
                    "for(var i = 0; i<screens.length; i++)",
                    "{",
                    "    // Display logo as background",
                    "    var logo = {",
                    "        type: \"image\",",
                    "        src: \"resources/vx3logo.png\",",
                    "        height: screenHeight * fxr,",
                    "        width: screenWidth * fxr,",
                    "        x: (screens[i].leftLeft * fxr) + xMainOffset,",
                    "        y: yMainOffset",
                    "    };",
                    "    items.push(logo);",
                    "",
                    "    // Draw the screens",
                    "    var item = {",
                    "        type: 'rect',",
                    "        fill: '#ffc',",
                    "        height: screenHeight * fxr,",
                    "        width: screenWidth * fxr,",
                    "        x: (screens[i].leftLeft * fxr) + xMainOffset,",
                    "        y: yMainOffset,",
                    "        opacity: 0.5,",
                    "        stroke: 'red',",
                    "        'stroke-width': 2,",
                    "        listeners: {",
                    "            mouseover: mouseMove,",
                    "            mouseout: mouseOut",
                    "        }       ",
                    "    };",
                    "    items.push(item);",
                    "    // Construct the array of dimensions to loop through",
                    "    var dimensions = [",
                    "    [screens[i].leftLeft, screens[i].centerLeft],",
                    "    [screens[i].leftCenter, screens[i].centerCenter],",
                    "    [screens[i].leftRight, screens[i].centerRight]",
                    "    ];",
                    "    for(var x = 0; x < dimensions.length; x++)",
                    "    {",
                    "        var dim = dimensions[x][0];",
                    "        // Odd numbers offset by 55, even by 30 to stagger text",
                    "        var yOffset = yMainOffset + 45;",
                    "        if(i%2 === 0)",
                    "        yOffset = yMainOffset + 5;",
                    "        var xOffset = -20;",
                    "",
                    "        // Dimension text        ",
                    "        var textItem = {",
                    "            type: 'text',",
                    "            text: dim + '\"',",
                    "            x: (dim * fxr) + xOffset + xMainOffset + 3,",
                    "            y: (screenHeight * fxr) + yOffset + 18,",
                    "            fill: 'black',",
                    "            font: '10px \"Arial\"',",
                    "            rotate: {",
                    "                degrees: 0",
                    "            }",
                    "        };",
                    "        items.push(textItem);",
                    "        // Feet + inches",
                    "        var feetInches = wsCalc.convertFeet(dim);",
                    "        if(measureFrom == \"center\")",
                    "        {",
                    "            feetInches = wsCalc.convertFeet(dimensions[x][1]);",
                    "        }",
                    "        var feetTextItem = Ext.clone(textItem);",
                    "        feetTextItem.text = feetInches;",
                    "        feetTextItem.y = feetTextItem.y + 13;",
                    "        items.push(feetTextItem);",
                    "        // Dimension lines",
                    "        var x1 = (dim * fxr) + xMainOffset;",
                    "        var y1 = (screenHeight * fxr) + yMainOffset ;",
                    "        var lineItem = {",
                    "            type: \"path\",",
                    "            path: \"M\" + x1 + \" \" + y1 + \" v \" + yOffset + \" h 25 v 28 h -50 v -28 h 25 h -25 v 14 h 50\",",
                    "            stroke: \"purple\"",
                    "        };",
                    "",
                    "        items.push(lineItem);",
                    "    }  ",
                    "}",
                    "// Vertical Center Dimension line",
                    "var cX1 = 5;",
                    "var cY1 = ((screenHeight * fxr)/2) + yMainOffset ;",
                    "var verticalCenterLineItem = {",
                    "    type: \"path\",",
                    "    path: \"M0 \" + cY1 + \" h 15 M20 \" + cY1 + \" h 15 M40 \" + cY1 + \" h 15\",",
                    "    stroke: \"red\"",
                    "};",
                    "items.push(verticalCenterLineItem);",
                    "",
                    "// Vertical Center Dimension text",
                    "var verticalCenterTextItem = {",
                    "    type: \"text\",",
                    "    text: wsCalc.getCenterHeightFF().toFixed(2),",
                    "    fill: \"black\",",
                    "    font: \"10px Arial\",",
                    "    x: 0,",
                    "    y: cY1 - 10 ",
                    "};",
                    "items.push(verticalCenterTextItem);",
                    "var feetDim = wsCalc.convertFeet(wsCalc.getCenterHeightFF().toFixed(2));",
                    "feetVerticalCenterDimTextItem = Ext.clone(verticalCenterTextItem);",
                    "feetVerticalCenterDimTextItem.text = feetDim;",
                    "feetVerticalCenterDimTextItem.y = feetVerticalCenterDimTextItem.y + 18;",
                    "items.push(feetVerticalCenterDimTextItem);",
                    "items.push(verticalCenterTextItem);",
                    "",
                    "// If Measure center, add centerline",
                    "if(measureFrom === 'center')",
                    "{",
                    "    cX1 = ((wsCalc.hsize/2) * fxr) + xMainOffset;",
                    "    cY1 = (screenHeight * fxr) + yMainOffset + 15 ; // 15 px bellow bottom of screen",
                    "    var cY2 = ((screenHeight/2)*fxr) + yMainOffset; // Middle of screen",
                    "    var l = Math.round(cY2/5); // segment length",
                    "    var CenterLineItem = {",
                    "        type: \"path\",",
                    "        path: \"M\" + cX1 + \" \" + 5 + \" v \" + l + ",
                    "        \t\" M\" + cX1 + \" \" + ( l*2) + \" v \" + l +  \" \" + ",
                    "         \t\" M\" + cX1 + \" \" + ((l*4)) + \" v \" + l + ",
                    "        \t\" M\" + cX1 + \" \" + ((l*6)) + \" v \" + l +",
                    "        \t\" M\" + cX1 + \" \" + ((l*8)) + \" v \" + l +",
                    "        \t\" M\" + cX1 + \" \" + ((l*10)) + \" v \" + l,",
                    "        stroke: \"blue\"",
                    "    };",
                    "    items.push(CenterLineItem);",
                    "}",
                    "return items;",
                    ""
                ]
            },
            "designerId": "ea192449-6081-4c21-84cf-f11d325e7399"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "drawTitle",
                "fn": "drawTitle",
                "designer|params": [
                    "xMainOffset",
                    "yMainOffset",
                    "fxr"
                ],
                "implHandler": [
                    "var items = [];",
                    "        var center = (wsCalc.hsize/2) * fxr;",
                    "        var screenWidth = wsCalc.getScreenWidth();",
                    "        var screenHeight = wsCalc.vsize;",
                    "",
                    "        // Dimension text        ",
                    "        var textItem = {",
                    "            type: \"text\",",
                    "            text: titleText.getValue(),",
                    "            x: center,",
                    "            y: 10,",
                    "            fill: \"black\",",
                    "            font: '18px \"Arial\"'",
                    "        };",
                    "        items.push(textItem);",
                    "        // Location",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: locationText.getValue(),",
                    "            x: center,",
                    "            y: 28,",
                    "            fill: \"black\",",
                    "            font: '14px \"Arial\"'",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "        // Date",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: new Date().toDateString(),",
                    "            x: center,",
                    "            y: 40,",
                    "            fill: \"black\",",
                    "            font: '12px \"Arial\"'",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "        // Total Screens",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Total Screens: \" + numprojectors.getValue(),",
                    "            x: 20,",
                    "            y: 50,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\",",
                    "            style: { ",
                    "                fontWeight: 'bold',",
                    "                fontStyle: 'italic'",
                    "            }",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "        // Individual Screen Dimension",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Individual Screen Dimensions: \",",
                    "            x: 20,",
                    "            y: 70,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\",",
                    "            style: { ",
                    "                fontWeight: 'bold',",
                    "                fontStyle: 'italic'",
                    "            }",
                    "        };",
                    "        items.push(textItem);",
                    "        //",
                    "        // Feet label",
                    "        //",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Feet:\",",
                    "            x: 20,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels label",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Pixels:\",",
                    "            x: 13,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "        //",
                    "        // Width header",
                    "        // ",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Width\",",
                    "            x: 60,",
                    "            y: 85,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Feet width",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: screenWidth.toFixed(2),",
                    "            x: 60,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels width",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: wsCalc.HNatPixRate,",
                    "            x: 60,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "        //",
                    "        // Height header",
                    "        // ",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Height\",",
                    "            x: 110,",
                    "            y: 85,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Feet height",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: screenHeight.toFixed(2),",
                    "            x: 110,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels height",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: wsCalc.VNatPixRate,",
                    "            x: 110,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "        //",
                    "        // Composite Screen Dimension",
                    "        //",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Composite Screen Dimensions: \",",
                    "            x: 240,",
                    "            y: 70,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\",",
                    "            style: { ",
                    "                fontWeight: 'bold',",
                    "                fontStyle: 'italic'",
                    "            }",
                    "        };",
                    "        items.push(textItem);",
                    "        //",
                    "        // Feet label",
                    "        //",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Feet:\",",
                    "            x: 250,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels label",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Pixels:\",",
                    "            x: 243,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "        //",
                    "        // Width header",
                    "        // ",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Width\",",
                    "            x: 290,",
                    "            y: 85,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Feet width",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: wsCalc.hsize.toFixed(2),",
                    "            x: 290,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels width",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: wsCalc.getSpyHNatPixRate(),",
                    "            x: 290,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "        //",
                    "        // Height header",
                    "        // ",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Height\",",
                    "            x: 340,",
                    "            y: 85,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Feet height",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: screenHeight.toFixed(2),",
                    "            x: 340,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels height",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: wsCalc.VNatPixRate,",
                    "            x: 340,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "// Overlap Header",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Overlap\",",
                    "            x: 394,",
                    "            y: 85,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "// Feet overlap",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: wsCalc.getOverlapSize().toFixed(2),",
                    "            x: 394,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels overlap",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: Math.round(wsCalc.getOverLapPix()),",
                    "            x: 394,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "//",
                    "        // Legend",
                    "        //",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Legend: \",",
                    "            x: 470,",
                    "            y: 70,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\",",
                    "            style: { ",
                    "                fontWeight: 'bold',",
                    "                fontStyle: 'italic'",
                    "            }",
                    "        };",
                    "        items.push(textItem);",
                    "        //",
                    "        // Feet label",
                    "        //",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"0\",",
                    "            x: 470,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Pixels label",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"0'-0\" + '\"',",
                    "            x: 470,",
                    "            y: 120,",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "        //",
                    "        // Decimal feet descriptors",
                    "        // ",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Decimal feet\",",
                    "            x: 510,",
                    "            y: 100,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "        // Feet and inches descriptor",
                    "        textItem = {",
                    "            type: \"text\",",
                    "            text: \"Feet, inches\",",
                    "            x: 510,",
                    "            y: 120,",
                    "            fill: \"black\",",
                    "            font: \"12px 'Arial', 'Times', 'serif'\"",
                    "        };",
                    "        items.push(textItem);",
                    "       ",
                    "\t\t// dimension box",
                    "        textItem = {",
                    "            type: 'path',",
                    "            path: 'M455 92 h 50 v 36 h -50 v -36 M455 110 h 50', ",
                    "            stroke: 'black',",
                    "            \"stroke-width\": 2",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "",
                    "        // Horizontal Line",
                    "        textItem = {",
                    "            type: 'path',",
                    "            path: 'M10 140 h ' + wsCalc.hsize * fxr,",
                    "            stroke: 'black',",
                    "            \"stroke-width\": 4",
                    "        };",
                    "        items.push(textItem);",
                    "",
                    "",
                    "        return items;"
                ]
            },
            "designerId": "ceecc7bd-611c-4349-85b6-7a11e163ece3"
        }
    ]
}